"use client"

import { Box, Heading, Text, VStack, HStack, Icon } from "@chakra-ui/react"
import { FaDivide, FaBookOpen, FaTools, FaExclamationTriangle } from "react-icons/fa"
import { LuCircleCheck } from "react-icons/lu"

const DivisibilitePanel = () => {
  return (
    <Box
      px="6"
      py="4"
      borderRadius="md"
      bg="gray.50"
      _dark={{ bg: "gray.800" }}
      boxShadow="md"
      fontFamily="Latin Modern Math"
    >
      {/* Titre */}
      <HStack  mb={4}>
        <Icon as={FaDivide} boxSize={5} color="blue.500" />
        <Heading as="h2" size="md">
          Divisibilit√© ‚Äî Fondamentaux
        </Heading>
      </HStack>

      {/* D√©finition */}
      <Text mb={4}>
        On dit que <b>a</b> est divisible par <b>b</b> (not√© <b>b ‚à£ a</b>) s‚Äôil existe un entier <b>k</b> tel que :
        <br />
        <b>a = bk</b>
      </Text>

      {/* Propri√©t√©s */}
      <HStack  mb={2}>
        <Icon as={FaBookOpen} color="blue.500" />
        <Text fontWeight="bold">Propri√©t√©s fondamentales</Text>
      </HStack>

      <VStack align="start"  mb={4}>
        <Box>
          <HStack >
            <Icon as={LuCircleCheck} color="green.500" />
            <Text><b>R√©flexivit√©</b> : a ‚à£ a</Text>
          </HStack>
          <Text fontStyle="italic" ps={6}>Exemple : 7 ‚à£ 7</Text>
        </Box>

        <Box>
          <HStack>
            <Icon as={LuCircleCheck} color="green.500" />
            <Text><b>Transitivit√©</b> : Si a ‚à£ b et b ‚à£ c, alors a ‚à£ c</Text>
          </HStack>
          <Text fontStyle="italic" ps={6}>Exemple : 2 ‚à£ 4 et 4 ‚à£ 8 ‚áí 2 ‚à£ 8</Text>
        </Box>

        <Box>
          <HStack>
            <Icon as={LuCircleCheck} color="green.500" />
            <Text><b>Antisym√©trie</b> : Si a ‚à£ b et b ‚à£ a, alors a = ¬±b</Text>
          </HStack>
          <Text fontStyle="italic" ps={6}>Exemple : 5 ‚à£ 5 et 5 ‚à£ 5 ‚áí a = b</Text>
        </Box>

        <Box>
          <HStack>
            <Icon as={LuCircleCheck} color="green.500" />
            <Text><b>Combinaison lin√©aire</b> : Si d ‚à£ a et d ‚à£ b, alors d ‚à£ (au + bv)</Text>
          </HStack>
          <Text fontStyle="italic" ps={6}>Exemple : 3 ‚à£ 6 et 3 ‚à£ 9 ‚áí 3 ‚à£ (6√ó2 + 9√ó1 = 21)</Text>
        </Box>
      </VStack>

      {/* M√©thodes */}
      <HStack  mb={2}>
        <Icon as={FaTools} color="orange.500" />
        <Text fontWeight="bold">M√©thodes de v√©rification</Text>
      </HStack>

      <VStack align="start" mb={4}>
        <Text>üõ†Ô∏è Par division : Si a √∑ b donne un entier, alors b ‚à£ a</Text>
        <Text>üõ†Ô∏è Par √©galit√© : Trouver k tel que a = bk</Text>
        <Text>üõ†Ô∏è Par factorisation : Si a = b √ó k, alors b ‚à£ a</Text>
      </VStack>

      {/* Mise en garde */}
      <HStack  mb={2}>
        <Icon as={FaExclamationTriangle} color="red.500" />
        <Text fontWeight="bold">Attention</Text>
      </HStack>

      <Text>
        <b>0 ‚à£ 0</b> est vrai, mais <b>0 ‚à£ a</b> est faux si a ‚â† 0.  
        La divisibilit√© par z√©ro est <b>toujours interdite</b> sauf pour 0 lui-m√™me.
      </Text>
    </Box>
  )
}

export default DivisibilitePanel
